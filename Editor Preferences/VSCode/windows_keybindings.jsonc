// Place your key bindings in this file to override the defaultsauto[]
[
    // Use "sane" right tab switching
    //   - Remove default bindings to "ctrl+tab"
    //   - Remove default binding to select right tab
    //   - Bind "ctrl+tab" to select right tab
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    // Use "sane" left tab switching
    //   - Remove default bindings to "ctrl+shift+tab"
    //   - Remove default binding to select left tab
    //   - Bind "ctrl+shift+tab" to select left tab
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },

    // Sidebar
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    //   Bind "ctrl+1" to "Explorer" sidebar
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.maximizeEditor",
        "when": "activeViewlet == 'workbench.view.explorer' && sideBarVisible"
    },
    //   Bind "ctrl+2" to "Search" sidebar
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.view.search"
    },
    {
        "key": "actrlt+2",
        "command": "workbench.action.maximizeEditor",
        "when": "activeViewlet == 'workbench.view.search' && sideBarVisible"
    },
    //   Bind "ctrl+3" to "Git" sidebar
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.maximizeEditor",
        "when": "activeViewlet == 'workbench.view.scm' && sideBarVisible"
    },
    //   Bind "ctrl+4" to "Debug" sidebar
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.maximizeEditor",
        "when": "activeViewlet == 'workbench.view.debug' && sideBarVisible"
    },
    //   Bind "ctrl+5" to "Extensions" sidebar
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.maximizeEditor",
        "when": "activeViewlet == 'workbench.view.extensions' && sideBarVisible"
    },

    // Goto definition
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition"
    },
    {
        "key": "ctrl+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    // Goto implementation
    {
        "key": "shift+alt+f12",
        "command": "-references-view.find"
    },
    {
        "key": "ctrl+alt+b",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
    },

    // Language selector
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection"
    },
    {
        "key": "ctrl+k m",
        "command": "-workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.editor.changeLanguageMode"
    }
]